<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_09) on Fri Mar 15 02:03:30 GMT 2013 -->
<title>Grid</title>
<meta name="date" content="2013-03-15">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Grid";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Grid.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../reactogon/ControlContainer.html" title="class in reactogon"><span class="strong">Prev Class</span></a></li>
<li><a href="../reactogon/GridContainer.html" title="class in reactogon"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?reactogon/Grid.html" target="_top">Frames</a></li>
<li><a href="Grid.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">reactogon</div>
<h2 title="Class Grid" class="title">Class Grid</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>reactogon.Grid</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">Grid</span>
extends java.lang.Object</pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../reactogon/Grid.html#Grid(reactogon.ImageLoader, reactogon.SoundSequencer, int)">Grid</a></strong>(<a href="../reactogon/ImageLoader.html" title="class in reactogon">ImageLoader</a>&nbsp;imageLoader,
    <a href="../reactogon/SoundSequencer.html" title="class in reactogon">SoundSequencer</a>&nbsp;ss,
    int&nbsp;channel)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#addWarp(reactogon.Tile)">addWarp</a></strong>(<a href="../reactogon/Tile.html" title="class in reactogon">Tile</a>&nbsp;t)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#calculateKey(reactogon.Node, int)">calculateKey</a></strong>(<a href="../reactogon/Node.html" title="class in reactogon">Node</a>&nbsp;n,
            int&nbsp;direction)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#clear()">clear</a></strong>()</code>
<div class="block">Clears the grid</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#createGrid()">createGrid</a></strong>()</code>
<div class="block">Creates the grid</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../reactogon/HexCell.html" title="class in reactogon">HexCell</a>[][]</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#getGrid()">getGrid</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../reactogon/HexCell.html" title="class in reactogon">HexCell</a></code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#getHexCell(int, int)">getHexCell</a></strong>(int&nbsp;i,
          int&nbsp;j)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#getNoteLength()">getNoteLength</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#getStartNote()">getStartNote</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#getTempo()">getTempo</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../reactogon/Tile.html" title="class in reactogon">Tile</a></code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#getTile(int, int)">getTile</a></strong>(int&nbsp;i,
       int&nbsp;j)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#getVelocity()">getVelocity</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#isPlay()">isPlay</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#paint(java.awt.Graphics)">paint</a></strong>(java.awt.Graphics&nbsp;g)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#play()">play</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#playNote(int, int)">playNote</a></strong>(int&nbsp;index_i,
        int&nbsp;index_j)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#redo()">redo</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#removeTile(int, int, boolean)">removeTile</a></strong>(int&nbsp;i,
          int&nbsp;j,
          boolean&nbsp;b)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#removeWarp(reactogon.Tile)">removeWarp</a></strong>(<a href="../reactogon/Tile.html" title="class in reactogon">Tile</a>&nbsp;t)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#setNoteLength(int)">setNoteLength</a></strong>(int&nbsp;noteLength)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#setPlay(boolean)">setPlay</a></strong>(boolean&nbsp;play)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#setStartNode()">setStartNode</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#setStartNote(int)">setStartNote</a></strong>(int&nbsp;startNote)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#setTempo(int)">setTempo</a></strong>(int&nbsp;tempo)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#setTile(reactogon.Tile, int, int)">setTile</a></strong>(<a href="../reactogon/Tile.html" title="class in reactogon">Tile</a>&nbsp;t,
       int&nbsp;i,
       int&nbsp;j)</code>
<div class="block">Used for placing a tile in the grid, also used to set the start node</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#setVelocity(int)">setVelocity</a></strong>(int&nbsp;velocity)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#stop()">stop</a></strong>()</code>
<div class="block">Clears all arrays</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../reactogon/Grid.html#undo()">undo</a></strong>()</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Grid(reactogon.ImageLoader, reactogon.SoundSequencer, int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Grid</h4>
<pre>public&nbsp;Grid(<a href="../reactogon/ImageLoader.html" title="class in reactogon">ImageLoader</a>&nbsp;imageLoader,
    <a href="../reactogon/SoundSequencer.html" title="class in reactogon">SoundSequencer</a>&nbsp;ss,
    int&nbsp;channel)</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="paint(java.awt.Graphics)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>paint</h4>
<pre>public&nbsp;void&nbsp;paint(java.awt.Graphics&nbsp;g)</pre>
</li>
</ul>
<a name="createGrid()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createGrid</h4>
<pre>public&nbsp;void&nbsp;createGrid()</pre>
<div class="block">Creates the grid</div>
</li>
</ul>
<a name="getGrid()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGrid</h4>
<pre>public&nbsp;<a href="../reactogon/HexCell.html" title="class in reactogon">HexCell</a>[][]&nbsp;getGrid()</pre>
</li>
</ul>
<a name="setStartNode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setStartNode</h4>
<pre>public&nbsp;void&nbsp;setStartNode()</pre>
</li>
</ul>
<a name="play()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>play</h4>
<pre>public&nbsp;void&nbsp;play()</pre>
</li>
</ul>
<a name="setTile(reactogon.Tile, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTile</h4>
<pre>public&nbsp;void&nbsp;setTile(<a href="../reactogon/Tile.html" title="class in reactogon">Tile</a>&nbsp;t,
           int&nbsp;i,
           int&nbsp;j)</pre>
<div class="block">Used for placing a tile in the grid, also used to set the start node</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>t</code> - Tile you want to set</dd><dd><code>i</code> - index in the grid</dd><dd><code>j</code> - index in the grid</dd></dl>
</li>
</ul>
<a name="calculateKey(reactogon.Node, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>calculateKey</h4>
<pre>public&nbsp;int&nbsp;calculateKey(<a href="../reactogon/Node.html" title="class in reactogon">Node</a>&nbsp;n,
               int&nbsp;direction)</pre>
</li>
</ul>
<a name="getTile(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTile</h4>
<pre>public&nbsp;<a href="../reactogon/Tile.html" title="class in reactogon">Tile</a>&nbsp;getTile(int&nbsp;i,
           int&nbsp;j)</pre>
</li>
</ul>
<a name="getHexCell(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHexCell</h4>
<pre>public&nbsp;<a href="../reactogon/HexCell.html" title="class in reactogon">HexCell</a>&nbsp;getHexCell(int&nbsp;i,
                 int&nbsp;j)</pre>
</li>
</ul>
<a name="clear()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clear</h4>
<pre>public&nbsp;void&nbsp;clear()</pre>
<div class="block">Clears the grid</div>
</li>
</ul>
<a name="stop()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stop</h4>
<pre>public&nbsp;void&nbsp;stop()</pre>
<div class="block">Clears all arrays</div>
</li>
</ul>
<a name="playNote(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>playNote</h4>
<pre>public&nbsp;void&nbsp;playNote(int&nbsp;index_i,
            int&nbsp;index_j)</pre>
</li>
</ul>
<a name="getTempo()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTempo</h4>
<pre>public&nbsp;int&nbsp;getTempo()</pre>
</li>
</ul>
<a name="removeTile(int, int, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeTile</h4>
<pre>public&nbsp;void&nbsp;removeTile(int&nbsp;i,
              int&nbsp;j,
              boolean&nbsp;b)</pre>
</li>
</ul>
<a name="setTempo(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTempo</h4>
<pre>public&nbsp;void&nbsp;setTempo(int&nbsp;tempo)</pre>
</li>
</ul>
<a name="addWarp(reactogon.Tile)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addWarp</h4>
<pre>public&nbsp;void&nbsp;addWarp(<a href="../reactogon/Tile.html" title="class in reactogon">Tile</a>&nbsp;t)</pre>
</li>
</ul>
<a name="removeWarp(reactogon.Tile)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeWarp</h4>
<pre>public&nbsp;void&nbsp;removeWarp(<a href="../reactogon/Tile.html" title="class in reactogon">Tile</a>&nbsp;t)</pre>
</li>
</ul>
<a name="getStartNote()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStartNote</h4>
<pre>public&nbsp;int&nbsp;getStartNote()</pre>
</li>
</ul>
<a name="setStartNote(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setStartNote</h4>
<pre>public&nbsp;void&nbsp;setStartNote(int&nbsp;startNote)</pre>
</li>
</ul>
<a name="undo()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>undo</h4>
<pre>public&nbsp;void&nbsp;undo()</pre>
</li>
</ul>
<a name="redo()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>redo</h4>
<pre>public&nbsp;void&nbsp;redo()</pre>
</li>
</ul>
<a name="isPlay()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isPlay</h4>
<pre>public&nbsp;boolean&nbsp;isPlay()</pre>
</li>
</ul>
<a name="setPlay(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPlay</h4>
<pre>public&nbsp;void&nbsp;setPlay(boolean&nbsp;play)</pre>
</li>
</ul>
<a name="setVelocity(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setVelocity</h4>
<pre>public&nbsp;void&nbsp;setVelocity(int&nbsp;velocity)</pre>
</li>
</ul>
<a name="getVelocity()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getVelocity</h4>
<pre>public&nbsp;int&nbsp;getVelocity()</pre>
</li>
</ul>
<a name="setNoteLength(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNoteLength</h4>
<pre>public&nbsp;void&nbsp;setNoteLength(int&nbsp;noteLength)</pre>
</li>
</ul>
<a name="getNoteLength()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getNoteLength</h4>
<pre>public&nbsp;int&nbsp;getNoteLength()</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Grid.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../reactogon/ControlContainer.html" title="class in reactogon"><span class="strong">Prev Class</span></a></li>
<li><a href="../reactogon/GridContainer.html" title="class in reactogon"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?reactogon/Grid.html" target="_top">Frames</a></li>
<li><a href="Grid.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
